{{- if .Values.passboltEnv.secretProvider.enabled }}
{{- $type := "job" -}}
{{- $action := "create-secret-env" -}}
{{- $Name := include "passbolt-library.fullname" . -}}
{{- $fullName := printf "%s-%s-%s" $Name $type $action -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "passbolt-library.labels" . | nindent 4 }}
    {{- include "passbolt-library.typelabels" (dict "action" $action "type" $type) | nindent 4 }}
  annotations:
    helm.sh/hook: pre-install, pre-upgrade
    helm.sh/hook-weight: "-1"
spec:
  template:
    metadata:
      labels:
      {{- include "passbolt-library.typelabels" (dict "action" $action "type" $type) | nindent 8 }}
    spec:
      restartPolicy: OnFailure
      containers:
        - name: {{ $fullName }}
          image: busybox:latest
          imagePullPolicy: IfNotPresent
          command: ['/bin/bash', '-c', 'echo "Creating secrets from secret provider..."']
          volumeMounts:
            - name: secretprovider-env
              mountPath: "/mnt/secrets-store"
              readOnly: true
      volumes:
        - name: secretprovider
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "{{ include "passbolt-library.fullname" . }}-sec-env"
{{- end }}
